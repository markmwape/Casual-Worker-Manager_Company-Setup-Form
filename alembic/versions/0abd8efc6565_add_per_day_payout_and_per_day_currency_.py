"""Add per_day_payout and per_day_currency to Task model

Revision ID: 0abd8efc6565
Revises: d532020ac9ff
Create Date: 2025-09-12 13:18:29.805493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0abd8efc6565'
down_revision: Union[str, Sequence[str], None] = 'd532020ac9ff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Get database inspector to check for existing tables
    from alembic import op
    import sqlalchemy as sa
    from sqlalchemy import inspect
    
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Only create activity_log table if it doesn't exist
    if not inspector.has_table('activity_log'):
        op.create_table('activity_log',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_email', sa.String(length=150), nullable=True),
        sa.Column('action', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('user_agent', sa.Text(), nullable=True),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
    
    # Check if columns already exist before adding them
    existing_columns = [c['name'] for c in inspector.get_columns('task')]
    if 'per_day_payout' not in existing_columns:
        op.add_column('task', sa.Column('per_day_payout', sa.Float(), nullable=True))
    if 'per_day_currency' not in existing_columns:
        op.add_column('task', sa.Column('per_day_currency', sa.String(length=10), nullable=True))
    
    # Check if workspace table exists and if column doesn't exist
    if inspector.has_table('workspace'):
        existing_workspace_columns = [c['name'] for c in inspector.get_columns('workspace')]
        if 'subscription_tier' not in existing_workspace_columns:
            op.add_column('workspace', sa.Column('subscription_tier', sa.String(length=50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('workspace', 'subscription_tier')
    op.drop_column('task', 'per_day_currency')
    op.drop_column('task', 'per_day_payout')
    op.drop_table('activity_log')
    # ### end Alembic commands ###
